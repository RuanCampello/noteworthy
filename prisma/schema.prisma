generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model User {
  id            String           @id @default(cuid())
  name          String?
  email         String?          @unique
  emailVerified DateTime?
  image         String?
  password      String?
  accounts      Account[]
  Note          Note[]
  Preferences   UserPreferences?

  @@map("users")
}

enum Colour {
  tiffany
  blue
  mindaro
  sunset
  melon
  tickle
  wisteria
  cambridge
  mikado
  slate
}

enum NoteFormat {
  full
  slim
}

model Note {
  id          String   @id @default(uuid())
  title       String
  createdAt   DateTime @default(now()) @map("created_at")
  lastUpdate  DateTime @default(now()) @map("last_update")
  isFavourite Boolean  @default(false) @map("is_favourite")
  isArchived  Boolean  @default(false) @map("is_archived")
  isPublic    Boolean  @default(false) @map("is_public")
  owner       User     @relation(fields: [userId], references: [id])
  content     String
  colour      Colour
  userId      String

  @@map("notes")
}

model UserPreferences {
  id         Int        @id @default(autoincrement())
  userId     String     @unique
  user       User       @relation(fields: [userId], references: [id])
  noteFormat NoteFormat @default(full) @map("note_format")

  @@map("users_preferences")
}

model PasswordResetToken {
  id      String   @id @default(uuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([token, email])
  @@map("password_reset_tokens")
}
